---
import "../styles/global.scss";

const { 
  type = "button",
  variant = "primary",
  size = "medium",
  disabled = false,
  class: className = "",
  children
} = Astro.props;
---

<button 
  type={type}
  disabled={disabled}
  class={`btn btn-${variant} btn-${size} ${className}`}
>
  <slot />
</button>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: 8px;
    font-family: inherit;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    box-sizing: border-box;
    line-height: 1;
    min-width: fit-content;
  }

  .btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  /* Primary variant */
  .btn-primary {
    background-color: var(--surface300);
    color: var(--text-primary);
    border: 2px solid var(--surface300);
    font-weight: 600;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .btn-primary:hover:not(:disabled) {
    background-color: var(--surface200);
    border-color: var(--surface200);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .btn-primary:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  /* Secondary variant */
  .btn-secondary {
    background-color: transparent;
    color: var(--text-primary);
    border: 2px solid var(--divider);
  }

  .btn-secondary:hover:not(:disabled) {
    background-color: var(--surface100);
    border-color: var(--surface300);
  }

  /* Outline variant */
  .btn-outline {
    background-color: transparent;
    color: var(--text-primary);
    border: 2px solid var(--text-primary);
  }

  .btn-outline:hover:not(:disabled) {
    background-color: var(--text-primary);
    color: var(--surface000);
  }

  /* Ghost variant */
  .btn-ghost {
    background-color: transparent;
    color: var(--text-secondary);
    border: 2px solid transparent;
  }

  .btn-ghost:hover:not(:disabled) {
    background-color: var(--surface100);
    color: var(--text-primary);
  }

  /* Size variants */
  .btn-small {
    padding: 0.625rem 1.25rem;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .btn-medium {
    padding: 0.875rem 1.75rem;
    font-size: 1rem;
    font-weight: 600;
  }

  .btn-large {
    padding: 1.125rem 2.25rem;
    font-size: 1.125rem;
    font-weight: 600;
  }

  /* Loading state */
  .btn.loading {
    position: relative;
    color: transparent;
  }

  .btn.loading::after {
    content: "";
    position: absolute;
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Focus state */
  .btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
  }
</style>

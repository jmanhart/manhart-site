---
import HeaderLink from "./HeaderLink.astro";
import BackButton from '../components/BackButton.astro';
import BreadCrumb from '../components/BreadCrumb.astro';
import HamburgerIcon from '../components/icons/HamburgerIcon.astro';
import "../styles/global.scss";
---

<header>
  <nav>
    <!-- Back and Breadcrumb navigation -->
    <BackButton />
    <BreadCrumb />
    <div class="header-actions">
      <!-- Mobile menu toggle button -->
      <button id="menu-toggle" aria-label="Toggle menu" class="overflow-menu-toggle">
        <HamburgerIcon />
      </button>

      <!-- Navigation links (hidden on mobile, toggleable) -->
      <div id="menu" class="menu">
        <HeaderLink href="/writing">Writing</HeaderLink>
        <HeaderLink href="/about">About</HeaderLink>
        <HeaderLink href="/social">Links</HeaderLink>
      </div>

      <!-- Theme toggle button -->
      <button id="theme-toggle" aria-label="Toggle theme" class="theme-toggle">
        <img
          src="/icon-moon.svg"
          class="icon-moon"
          alt="moon icon"
        />
        <img
          src="/icon-sun.svg"
          class="icon-sun"
          alt="sun icon"
        />
      </button>
    </div>
  </nav>

  <!-- JavaScript: Theme and menu toggle functionality -->
<script type="text/javascript">
  // Apply stored theme on page load
  if (localStorage.getItem("theme") === "dark") {
    document.body.classList.add("dark-theme");
  }

  // Update icon visibility on page load
  updateThemeIcons();

  // Theme toggle functionality
  document.getElementById("theme-toggle").addEventListener("click", () => {
    document.body.classList.toggle("dark-theme");

    // Store the user's preference
    if (document.body.classList.contains("dark-theme")) {
      localStorage.setItem("theme", "dark");
    } else {
      localStorage.removeItem("theme"); // Default to light mode (no class needed)
    }

    // Update the icons based on the new theme
    updateThemeIcons();
  });

  // Function to update icon visibility based on theme
  function updateThemeIcons() {
    const isDarkMode = document.body.classList.contains("dark-theme");
    document.querySelector(".icon-moon").style.visibility = isDarkMode ? "visible" : "hidden";
    document.querySelector(".icon-sun").style.visibility = isDarkMode ? "hidden" : "visible";
  }

  // Menu toggle functionality
  document.getElementById("menu-toggle").addEventListener("click", () => {
    document.getElementById("menu").classList.toggle("open");
  });

  // Close menu when clicking outside
  document.addEventListener("click", (event) => {
    const menu = document.getElementById("menu");
    const menuToggle = document.getElementById("menu-toggle");
    if (!menu.contains(event.target) && !menuToggle.contains(event.target)) {
      menu.classList.remove("open");
    }
  });
</script>


</header>

<style lang="scss">
  

  /* Theme toggle button */
  .theme-toggle {
    position: relative;
    height: 1.5em;
    width: 1.5em;
    cursor: pointer;

    .icon-moon,
    .icon-sun {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      visibility: hidden;
    }
  }

  /* Show correct icon based on theme */
  body[data-theme="light"] .theme-toggle .icon-sun {
    visibility: visible;
  }

  body[data-theme="dark"] .theme-toggle .icon-moon {
    visibility: visible;
  }

  /* Header styling */
  header {
    position: fixed;
    top: 0;
    width: 100%;
    padding: 1em;
    box-sizing: border-box;
    min-height: 65px;

    display: flex;
    justify-content: flex-end;
    z-index: 1000;
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    align-items: center;
  }

  .header-actions {
    display: flex;
    align-items: center;
    gap: 1em;
    width: 100%;
  }

  // /* Menu styles */
  // .menu {
  //   display: flex;
  //   gap: 1em;
  //   font-size: 1em;
  //   background-color: null;
    

  //   @media (max-width: 768px) {
  //     display: none;
  //     flex-direction: column;
  //     position: fixed;
  //     top: 0;
  //     left: 0;
  //     width: 100%;
  //     height: 100vh;
  //     justify-content: center;
  //     align-items: center;
  //     gap: 2em;
  //     z-index: 9999;
  //     background-color: green;
  //   }

  //   &.open {
  //     display: flex;
  //   }

  //   a {
  //     color: white;
  //     text-decoration: none;
  //     font-size: 1rem;
  //     @media (max-width: 768px) {
  //       font-size: 2em;
  //     }
  //   }
  // }

  // /* Menu toggle button (visible on mobile) */
  // .overflow-menu-toggle {
  //   display: none;
  //   border: none;
  //   font-size: 1.5rem;
  //   @media (max-width: 768px) {
  //     display: flex;
  //     justify-content: center;
  //     align-items: center;

  //   }
  // }
</style>